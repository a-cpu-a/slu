
--const &:>::std::str MSG = "Hello world!";
--fn _println(&:>::std::str text) -> void;


--@Entrypoint{"main"} --TODO: unhack this ... or formalize it specifically for `fn main` inside "main"|"lib"|"crate"
ex fn main() -> {}
{
	let mut &:>::std::str s = --[=[Implicit conv]=] "Hello world! \u{1F600} x.x\x00";
	--let unused = 4;--type == 4
	
	--:>::std::_println(self::MSG)
	--self::_println("Hello world!")
	
	:>::std::_println(s);
	s = --[=[Implicit conv]=] "I have stolen the show! ðŸ˜ˆ\x00";
	:>::std::_println(s);
	
	:>::std::_println(--[=[Implicit conversion from "c...0" to &str]=] "called helloWorld()\x00");
}
