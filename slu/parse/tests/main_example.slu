
fn printHelloWorld(l = &mut impl std::Log) {
	l.info("Hello world!", {}); -- The {} is for formatting arugments (no arguments in this example).
}
fn main() 
{
	-- Since logging is not always possible, you have to explicitly get a logger,
	-- in this case we want the log message to always be shown, so we panic if there is no logger.
	-- If logging can be thrown away, you can use `std::defaultLoggerOrDummy()` which may return a dummy implementation that voids your logs.
	let mut impl std::Log l = std::defaultLogger().unwrap();
	printHelloWorld(&mut l);
}